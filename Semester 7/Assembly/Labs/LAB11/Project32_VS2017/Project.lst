Microsoft (R) Macro Assembler Version 14.15.26732.1	    11/07/18 20:18:05
AddTwo.asm						     Page 1 - 1


				; Win32 Console Example #1                (Console1.asm)

				; This program calls the following Win32 Console functions:
				; GetStdHandle, ExitProcess, WriteConsole

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 


 = 00000050			BufSize = 80

 00000000			.data
 = 0dh,0ah			endl EQU <0dh,0ah>			; end of line sequence
 00000000 00000000		bytesReadfirst   DWORD ?
 00000004  00000050 [		bufferfirst BYTE BufSize DUP(?)
	    00
	   ]
 00000054 00000050		bufferfirstlength DWORD ($-bufferfirst)
 00000058 00000000		bytesReadlast   DWORD ?
 0000005C  00000050 [		bufferlast BYTE BufSize DUP(?)
	    00
	   ]
 000000AC 00000050		bufferlastlength DWORD ($-bufferlast)
 000000B0 00000000		bytesReadage   DWORD ?
 000000B4  00000050 [		bufferage BYTE BufSize DUP(?)
	    00
	   ]
 00000104 00000050		bufferagelength DWORD ($-bufferage)
 00000108 00000000		bytesReadphone   DWORD ?
 0000010C  00000050 [		bufferphone BYTE BufSize DUP(?)
	    00
	   ]
 0000015C 00000050		bufferphonelength DWORD ($-bufferphone)
 00000160 00000000		stdInHandle HANDLE ?


 00000164			firstname LABEL BYTE
 00000164  69 6E 70 75 74		BYTE "input first name ", endl
	   20 66 69 72 73
	   74 20 6E 61 6D
	   65 20 0D 0A
 00000177 00000013		firstnamesize DWORD ($-firstname)

 0000017B			lastname LABEL BYTE
 0000017B  69 6E 70 75 74		BYTE "input last name ", endl
	   20 6C 61 73 74
	   20 6E 61 6D 65
	   20 0D 0A
 0000018D 00000012		lastnamesize DWORD ($-lastname)

 00000191			age LABEL BYTE
 00000191  69 6E 70 75 74		BYTE "input age ", endl
	   20 61 67 65 20
	   0D 0A
 0000019D 0000000C		agesize DWORD ($-age)

 000001A1			phone LABEL BYTE
 000001A1  69 6E 70 75 74		BYTE "input phone number ", endl
	   20 70 68 6F 6E
	   65 20 6E 75 6D
	   62 65 72 20 0D
	   0A
 000001B6 00000015		phonesize DWORD ($-phone)

 000001BA			someEnd label byte
 000001BA  20 0D 0A			Byte " ", endl
 000001BD 00000003		someEndSize DWORD ($-someEnd)

 000001C1 00000000		consoleHandle HANDLE 0     ; handle to standard output device
 000001C5 00000000		bytesWritten  DWORD ?      ; number of bytes written
 000001C9 00000000		bytesRead   DWORD ?

 00000000			.code
 00000000			main PROC
				  ; Get the console output handle:
					INVOKE GetStdHandle, STD_OUTPUT_HANDLE
 00000000  6A F5	   *	    push    -00000000Bh
 00000002  E8 00000000 E   *	    call   GetStdHandle
 00000007  A3 000001C1 R		mov consoleHandle,eax

						; Get handle to standard input
					INVOKE GetStdHandle, STD_INPUT_HANDLE
 0000000C  6A F6	   *	    push    -00000000Ah
 0000000E  E8 00000000 E   *	    call   GetStdHandle
 00000013  A3 00000160 R		mov	stdInHandle,eax

				  ; Write a string to the console:
					INVOKE WriteConsole,
					  consoleHandle,		; console output handle
					  ADDR firstname,	; returns num bytes written
					  firstnamesize,
					  ADDR byteswritten,
					  0					; not used
 00000018  6A 00	   *	    push   +000000000h
 0000001A  68 000001C5 R   *	    push   OFFSET bytesWritten
 0000001F  FF 35 00000177 R *	    push   firstnamesize
 00000025  68 00000164 R   *	    push   OFFSET firstname
 0000002A  FF 35 000001C1 R *	    push   consoleHandle
 00000030  E8 00000000 E   *	    call   WriteConsoleA

					  	; Wait for user input
					INVOKE ReadConsole, stdInHandle, ADDR bufferfirst,
					  BufSize, ADDR bytesRead, 0
 00000035  6A 00	   *	    push   +000000000h
 00000037  68 000001C9 R   *	    push   OFFSET bytesRead
 0000003C  6A 50	   *	    push   +000000050h
 0000003E  68 00000004 R   *	    push   OFFSET bufferfirst
 00000043  FF 35 00000160 R *	    push   stdInHandle
 00000049  E8 00000000 E   *	    call   ReadConsoleA

					INVOKE WriteConsole,
					  consoleHandle,		; console output handle
					  ADDR lastname,	; returns num bytes written
					  lastnamesize,
					  ADDR byteswritten,
					  0					; not used
 0000004E  6A 00	   *	    push   +000000000h
 00000050  68 000001C5 R   *	    push   OFFSET bytesWritten
 00000055  FF 35 0000018D R *	    push   lastnamesize
 0000005B  68 0000017B R   *	    push   OFFSET lastname
 00000060  FF 35 000001C1 R *	    push   consoleHandle
 00000066  E8 00000000 E   *	    call   WriteConsoleA

					  	; Wait for user input
					INVOKE ReadConsole, stdInHandle, ADDR bufferlast,
					  BufSize, ADDR bytesRead, 0
 0000006B  6A 00	   *	    push   +000000000h
 0000006D  68 000001C9 R   *	    push   OFFSET bytesRead
 00000072  6A 50	   *	    push   +000000050h
 00000074  68 0000005C R   *	    push   OFFSET bufferlast
 00000079  FF 35 00000160 R *	    push   stdInHandle
 0000007F  E8 00000000 E   *	    call   ReadConsoleA

					INVOKE WriteConsole,
					  consoleHandle,		; console output handle
					  ADDR age,	; returns num bytes written
					  agesize,
					  ADDR byteswritten,
					  0					; not used
 00000084  6A 00	   *	    push   +000000000h
 00000086  68 000001C5 R   *	    push   OFFSET bytesWritten
 0000008B  FF 35 0000019D R *	    push   agesize
 00000091  68 00000191 R   *	    push   OFFSET age
 00000096  FF 35 000001C1 R *	    push   consoleHandle
 0000009C  E8 00000000 E   *	    call   WriteConsoleA

					  	; Wait for user input
					INVOKE ReadConsole, stdInHandle, ADDR bufferage,
					  BufSize, ADDR bytesRead, 0
 000000A1  6A 00	   *	    push   +000000000h
 000000A3  68 000001C9 R   *	    push   OFFSET bytesRead
 000000A8  6A 50	   *	    push   +000000050h
 000000AA  68 000000B4 R   *	    push   OFFSET bufferage
 000000AF  FF 35 00000160 R *	    push   stdInHandle
 000000B5  E8 00000000 E   *	    call   ReadConsoleA

					  INVOKE WriteConsole,
					  consoleHandle,		; console output handle
					  ADDR phone,	; returns num bytes written
					  phonesize,
					  ADDR byteswritten,
					  0					
 000000BA  6A 00	   *	    push   +000000000h
 000000BC  68 000001C5 R   *	    push   OFFSET bytesWritten
 000000C1  FF 35 000001B6 R *	    push   phonesize
 000000C7  68 000001A1 R   *	    push   OFFSET phone
 000000CC  FF 35 000001C1 R *	    push   consoleHandle
 000000D2  E8 00000000 E   *	    call   WriteConsoleA

					  	
					INVOKE ReadConsole, stdInHandle, ADDR bufferphone,
					  BufSize, ADDR bytesRead, 0
 000000D7  6A 00	   *	    push   +000000000h
 000000D9  68 000001C9 R   *	    push   OFFSET bytesRead
 000000DE  6A 50	   *	    push   +000000050h
 000000E0  68 0000010C R   *	    push   OFFSET bufferphone
 000000E5  FF 35 00000160 R *	    push   stdInHandle
 000000EB  E8 00000000 E   *	    call   ReadConsoleA


					  	  	  	INVOKE WriteConsole,
					  consoleHandle,		
					  ADDR someEnd,	
					  someEndSize,
					  ADDR byteswritten,
					  0			
 000000F0  6A 00	   *	    push   +000000000h
 000000F2  68 000001C5 R   *	    push   OFFSET bytesWritten
 000000F7  FF 35 000001BD R *	    push   someEndSize
 000000FD  68 000001BA R   *	    push   OFFSET someEnd
 00000102  FF 35 000001C1 R *	    push   consoleHandle
 00000108  E8 00000000 E   *	    call   WriteConsoleA

					INVOKE WriteConsole,
					  consoleHandle,		
					  ADDR bufferfirst,	
					  bufferfirstlength,
					  ADDR byteswritten,
					  0					
 0000010D  6A 00	   *	    push   +000000000h
 0000010F  68 000001C5 R   *	    push   OFFSET bytesWritten
 00000114  FF 35 00000054 R *	    push   bufferfirstlength
 0000011A  68 00000004 R   *	    push   OFFSET bufferfirst
 0000011F  FF 35 000001C1 R *	    push   consoleHandle
 00000125  E8 00000000 E   *	    call   WriteConsoleA

					  	  	INVOKE WriteConsole,
					  consoleHandle,		
					  ADDR someEnd,	
					  someEndSize,
					  ADDR byteswritten,
					  0					
 0000012A  6A 00	   *	    push   +000000000h
 0000012C  68 000001C5 R   *	    push   OFFSET bytesWritten
 00000131  FF 35 000001BD R *	    push   someEndSize
 00000137  68 000001BA R   *	    push   OFFSET someEnd
 0000013C  FF 35 000001C1 R *	    push   consoleHandle
 00000142  E8 00000000 E   *	    call   WriteConsoleA

					  	INVOKE WriteConsole,
					  consoleHandle,		; console output handle
					  ADDR bufferlast,	;lreturns num bytes written
					  bufferlastlength,
					  ADDR byteswritten,
					  0					; not 
 00000147  6A 00	   *	    push   +000000000h
 00000149  68 000001C5 R   *	    push   OFFSET bytesWritten
 0000014E  FF 35 000000AC R *	    push   bufferlastlength
 00000154  68 0000005C R   *	    push   OFFSET bufferlast
 00000159  FF 35 000001C1 R *	    push   consoleHandle
 0000015F  E8 00000000 E   *	    call   WriteConsoleA

					  	  	INVOKE WriteConsole,
					  consoleHandle,		; console output handle
					  ADDR someEnd,	; returns num bytes written
					  someEndSize,
					  ADDR byteswritten,
					  0					; not used
 00000164  6A 00	   *	    push   +000000000h
 00000166  68 000001C5 R   *	    push   OFFSET bytesWritten
 0000016B  FF 35 000001BD R *	    push   someEndSize
 00000171  68 000001BA R   *	    push   OFFSET someEnd
 00000176  FF 35 000001C1 R *	    push   consoleHandle
 0000017C  E8 00000000 E   *	    call   WriteConsoleA

					  	INVOKE WriteConsole,
					  consoleHandle,		; console output handle
					  ADDR bufferage,	; returns num bytes written
					  bufferagelength,
					  ADDR byteswritten,
					  0					; not used
 00000181  6A 00	   *	    push   +000000000h
 00000183  68 000001C5 R   *	    push   OFFSET bytesWritten
 00000188  FF 35 00000104 R *	    push   bufferagelength
 0000018E  68 000000B4 R   *	    push   OFFSET bufferage
 00000193  FF 35 000001C1 R *	    push   consoleHandle
 00000199  E8 00000000 E   *	    call   WriteConsoleA

					  	  	INVOKE WriteConsole,
					  consoleHandle,		; console output handle
					  ADDR someEnd,	; returns num bytes written
					  someEndSize,
					  ADDR byteswritten,
					  0					; not used
 0000019E  6A 00	   *	    push   +000000000h
 000001A0  68 000001C5 R   *	    push   OFFSET bytesWritten
 000001A5  FF 35 000001BD R *	    push   someEndSize
 000001AB  68 000001BA R   *	    push   OFFSET someEnd
 000001B0  FF 35 000001C1 R *	    push   consoleHandle
 000001B6  E8 00000000 E   *	    call   WriteConsoleA

					  	INVOKE WriteConsole,
					  consoleHandle,		; console output handle
					  ADDR bufferphone,	; returns num bytes written
					  bufferphonelength,
					  ADDR byteswritten,
					  0					; not used
 000001BB  6A 00	   *	    push   +000000000h
 000001BD  68 000001C5 R   *	    push   OFFSET bytesWritten
 000001C2  FF 35 0000015C R *	    push   bufferphonelength
 000001C8  68 0000010C R   *	    push   OFFSET bufferphone
 000001CD  FF 35 000001C1 R *	    push   consoleHandle
 000001D3  E8 00000000 E   *	    call   WriteConsoleA

					  	INVOKE WriteConsole,
					  consoleHandle,		; console output handle
					  ADDR someEnd,	; returns num bytes written
					  someEndSize,
					  ADDR byteswritten,
					  0					; not used
 000001D8  6A 00	   *	    push   +000000000h
 000001DA  68 000001C5 R   *	    push   OFFSET bytesWritten
 000001DF  FF 35 000001BD R *	    push   someEndSize
 000001E5  68 000001BA R   *	    push   OFFSET someEnd
 000001EA  FF 35 000001C1 R *	    push   consoleHandle
 000001F0  E8 00000000 E   *	    call   WriteConsoleA


					INVOKE ExitProcess,0
 000001F5  6A 00	   *	    push   +000000000h
 000001F7  E8 00000000 E   *	    call   ExitProcess
 000001FC			main ENDP
END main
Microsoft (R) Macro Assembler Version 14.15.26732.1	    11/07/18 20:18:05
AddTwo.asm						     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000001CD Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000001FC Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000001FC Public STDCALL
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
BufSize  . . . . . . . . . . . .	Number	 00000050h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
agesize  . . . . . . . . . . . .	DWord	 0000019D _DATA	
age  . . . . . . . . . . . . . .	Byte	 00000191 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
bufferagelength  . . . . . . . .	DWord	 00000104 _DATA	
bufferage  . . . . . . . . . . .	Byte	 000000B4 _DATA	
bufferfirstlength  . . . . . . .	DWord	 00000054 _DATA	
bufferfirst  . . . . . . . . . .	Byte	 00000004 _DATA	
bufferlastlength . . . . . . . .	DWord	 000000AC _DATA	
bufferlast . . . . . . . . . . .	Byte	 0000005C _DATA	
bufferphonelength  . . . . . . .	DWord	 0000015C _DATA	
bufferphone  . . . . . . . . . .	Byte	 0000010C _DATA	
bytesReadage . . . . . . . . . .	DWord	 000000B0 _DATA	
bytesReadfirst . . . . . . . . .	DWord	 00000000 _DATA	
bytesReadlast  . . . . . . . . .	DWord	 00000058 _DATA	
bytesReadphone . . . . . . . . .	DWord	 00000108 _DATA	
bytesRead  . . . . . . . . . . .	DWord	 000001C9 _DATA	
bytesWritten . . . . . . . . . .	DWord	 000001C5 _DATA	
consoleHandle  . . . . . . . . .	DWord	 000001C1 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
endl . . . . . . . . . . . . . .	Text   	 0dh,0ah
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
firstnamesize  . . . . . . . . .	DWord	 00000177 _DATA	
firstname  . . . . . . . . . . .	Byte	 00000164 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lastnamesize . . . . . . . . . .	DWord	 0000018D _DATA	
lastname . . . . . . . . . . . .	Byte	 0000017B _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
phonesize  . . . . . . . . . . .	DWord	 000001B6 _DATA	
phone  . . . . . . . . . . . . .	Byte	 000001A1 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
someEndSize  . . . . . . . . . .	DWord	 000001BD _DATA	
someEnd  . . . . . . . . . . . .	Byte	 000001BA _DATA	
stdInHandle  . . . . . . . . . .	DWord	 00000160 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
