<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML+RDFa 1.0//EN" "http://www.w3.org/MarkUp/DTD/xhtml-rdfa-1.dtd">
<!-- saved from url=(0039)https://alice-daq.web.cern.ch/print/112 -->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" version="XHTML+RDFa 1.0" dir="ltr" class="js"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
<meta name="Generator" content="Drupal 7 (http://drupal.org)">
    <!--<base href="https://alice-daq.web.cern.ch/products/amore-setup">--><base href=".">
    <title>AMORE setup</title>
    <script type="text/javascript" src="./AMORE-setup_files/js_vDrW3Ry_4gtSYaLsh77lWhWjIC6ml2QNkcfvfP5CVFs.js"></script>
<script type="text/javascript" src="./AMORE-setup_files/js_ln3xW5Q063CFJlnfddtRMRFgad3hS5pz0fnnC43dbx4.js"></script>
<script type="text/javascript" src="./AMORE-setup_files/js_CigipUiWcxmCWldrHlnFnwsjKHue5Fj2As3n4nCE_78.js"></script>
<script type="text/javascript" src="./AMORE-setup_files/js_wKDzQLTiZHb6VXNT6JxYfpFXrw9fTAXwEPXJ7fdDKjw.js"></script>
<script type="text/javascript">
<!--//--><![CDATA[//><!--
jQuery.extend(Drupal.settings, {"basePath":"\/","pathPrefix":"","ajaxPageState":{"theme":"cern_overwrite","theme_token":"RXrwdOQ3C5ETSL9kZ2wnPOZLbrXZuxqioYgh7fiKOuw","js":{"misc\/jquery.js":1,"misc\/jquery.once.js":1,"misc\/drupal.js":1,".\/sites\/all\/modules\/ckeditor_syntaxhighlighter\/library\/syntaxhighlighter_3.0.83\/scripts\/shCore.js":1,".\/sites\/all\/modules\/ckeditor_syntaxhighlighter\/library\/syntaxhighlighter_3.0.83\/scripts\/shAutoloader.js":1,"sites\/all\/modules\/cern_dev_status\/js\/cern_dev_status.js":1,"sites\/all\/modules\/memcache\/memcache_admin\/memcache.js":1,"sites\/all\/themes\/cern_base\/js\/cern.js":1,"sites\/all\/themes\/cern\/js\/script.js":1}},"ckeditor_syntaxhighlighter":{"library_path_scrpits":"\/sites\/all\/modules\/ckeditor_syntaxhighlighter\/library\/syntaxhighlighter_3.0.83\/scripts\/"}});
//--><!]]>
</script>
        <meta name="robots" content="noindex, nofollow, noarchive">          <link rel="shortcut icon" href="https://alice-daq.web.cern.ch/sites/alice-daq.web.cern.ch/files/alice_favicon.png" type="image/x-icon">
        <style type="text/css" media="all">
@import url("https://alice-daq.web.cern.ch/modules/system/system.base.css?pm3qgh");
@import url("https://alice-daq.web.cern.ch/modules/system/system.theme.css?pm3qgh");
</style>
<style type="text/css" media="all">
@import url("https://alice-daq.web.cern.ch/modules/book/book.css?pm3qgh");
@import url("https://alice-daq.web.cern.ch/sites/all/modules/cernsearchbox/cernsearch.css?pm3qgh");
@import url("https://alice-daq.web.cern.ch/sites/all/modules/cern_dev_status/css/dev_styling.css?pm3qgh");
@import url("https://alice-daq.web.cern.ch/sites/all/modules/cern_toolbar/css/screen.css?pm3qgh");
@import url("https://alice-daq.web.cern.ch/sites/all/modules/cern_toolbar/css/remove_ext.css?pm3qgh");
@import url("https://alice-daq.web.cern.ch/modules/comment/comment.css?pm3qgh");
@import url("https://alice-daq.web.cern.ch/sites/all/modules/date/date_api/date.css?pm3qgh");
@import url("https://alice-daq.web.cern.ch/sites/all/modules/date/date_popup/themes/datepicker.1.7.css?pm3qgh");
@import url("https://alice-daq.web.cern.ch/modules/field/theme/field.css?pm3qgh");
@import url("https://alice-daq.web.cern.ch/modules/node/node.css?pm3qgh");
@import url("https://alice-daq.web.cern.ch/modules/search/search.css?pm3qgh");
@import url("https://alice-daq.web.cern.ch/modules/user/user.css?pm3qgh");
@import url("https://alice-daq.web.cern.ch/sites/all/modules/extlink/extlink.css?pm3qgh");
@import url("https://alice-daq.web.cern.ch/sites/all/modules/views/css/views.css?pm3qgh");
</style>
<style type="text/css" media="all">
@import url("https://alice-daq.web.cern.ch/sites/all/modules/shib_auth/shib_auth.css?pm3qgh");
@import url("https://alice-daq.web.cern.ch/./sites/all/modules/ckeditor_syntaxhighlighter/library/syntaxhighlighter_3.0.83/styles/shCore.css?pm3qgh");
@import url("https://alice-daq.web.cern.ch/./sites/all/modules/ckeditor_syntaxhighlighter/library/syntaxhighlighter_3.0.83/styles/shThemeDefault.css?pm3qgh");
@import url("https://alice-daq.web.cern.ch/sites/all/modules/ctools/css/ctools.css?pm3qgh");
@import url("https://alice-daq.web.cern.ch/sites/alice-daq.web.cern.ch/modules/taxonomy_access/taxonomy_access.css?pm3qgh");
@import url("https://alice-daq.web.cern.ch/sites/all/modules/print/print_ui/css/print_ui.theme.css?pm3qgh");
</style>
<style type="text/css" media="all">
@import url("https://alice-daq.web.cern.ch/sites/all/themes/cern_base/css/base.css?pm3qgh");
@import url("https://alice-daq.web.cern.ch/sites/all/themes/cern/css/theme.css?pm3qgh");
@import url("https://alice-daq.web.cern.ch/sites/alice-daq.web.cern.ch/themes/webteam-cern_overwrite/css/colors.css?pm3qgh");
@import url("https://alice-daq.web.cern.ch/sites/alice-daq.web.cern.ch/themes/webteam-cern_overwrite/css/overwrite.css?pm3qgh");
</style>
<style type="text/css" media="print">
@import url("https://alice-daq.web.cern.ch/sites/all/themes/cern_base/css/print.css?pm3qgh");
</style>
  </head>
  <body>
            <div class="print-site_name">Published on <em class="placeholder">ALICE Data Acquisition</em> (<a href="https://alice-daq.web.cern.ch/">https://alice-daq.web.cern.ch</a>)</div>
    <p>
    </p><div class="print-breadcrumb"><a href="https://alice-daq.web.cern.ch/">Home</a> &gt; <a href="https://alice-daq.web.cern.ch/products/daq-products">Products</a> &gt; <a href="https://alice-daq.web.cern.ch/products/daq-software">Software</a> &gt; <a href="https://alice-daq.web.cern.ch/products/amore">AMORE</a> &gt; Setup</div>
    <hr class="print-hr">
        <div class="print-content"><article class="node-112 node node-daq-products view-mode-print view-mode-print view-mode-print clearfix" about="/products/amore-setup" typeof="sioc:Item foaf:Document">

      <header class="clearfix">
                    <h2 class="node-title node-title node-title"><a href="https://alice-daq.web.cern.ch/products/amore-setup">AMORE setup</a></h2>
            <span property="dc:title" content="AMORE setup" class="rdf-meta element-hidden"></span><span property="sioc:num_replies" content="0" datatype="xsd:integer" class="rdf-meta element-hidden"></span>  
        
          </header>
  
  <div class="field field-name-body field-type-text-with-summary field-label-hidden"><div class="field-items"><div class="field-item even" property="content:encoded">

<h1>1. Installation</h1>

<p>Follow these instructions :&nbsp;<a href="https://alice-daq.web.cern.ch/products/howto-configure-alice-daq-yum-repository">Howto configure alice daq yum repository</a></p>

<p>Type (with root privileges, the two first lines are needed to remove the native mysql)</p>

<p><kbd>rpm -e mysql-libs mysql mysql-devel postfix<br>
rm -rf /var/lib/mysql/<br>
yum install amore amore-web MySQL-server MySQL-shared MySQL-client MySQL-devel ACT date</kbd></p>

<p>The package ACT is not mandatory unless you develop amoreQA.<br>
The package date is mandatory for development, but not if you just run AMORE.</p>

<p>After installation the following directory structure exists:</p>

<p>/opt/amore<br>
&nbsp;&nbsp;&nbsp; |--amore-config : link to bin/amore-config<br>
&nbsp;&nbsp;&nbsp; |--bin : all binaries and scripts<br>
&nbsp;&nbsp;&nbsp; |--cmake : CMake find scripts<br>
&nbsp;&nbsp;&nbsp; |--include<br>
&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp; |--amore : all AMORE headers<br>
&nbsp;&nbsp;&nbsp; |--lib : all AMORE libraries&nbsp;<br>
&nbsp;&nbsp;&nbsp; |--web : all web application of AMORE</p>

<p><span style="font-size:14px;"><strong>Important note about ROOT</strong></span></p>

<p>Many people already have ROOT or prefer to compile it themselves. If it is the case, make sure you configured it with the options</p>

<p><kbd>--enable-soversion<br>
--enable-mysql</kbd></p>

<p>In any case, the installation of AMORE will force the installation of ROOT in /opt !<br>
To decide which version of ROOT to use, yours or the new one, update accordingly your environment variables.</p>

<h1>2. Configuration</h1>

<h2>2.1 Environment setup</h2>

<p>The following variables have to be set. We advice to add these lines to the .bashrc</p>

<p><kbd># DATE<br>
if [ -f /date/setup.sh ]; then<br>
&nbsp;&nbsp; . /date/setup.sh<br>
fi<br>
# AMORE and DIM<br>
export AMORE=/opt/amore<br>
export AMORE_SITE=/amoreSite<br>
export LD_LIBRARY_PATH=${AMORE_SITE}/lib:$LD_LIBRARY_PATH<br>
export LD_LIBRARY_PATH=${AMORE}/lib:$LD_LIBRARY_PATH<br>
export PATH=${AMORE}/bin:$PATH<br>
export LD_LIBRARY_PATH=/opt/dim/linux:$LD_LIBRARY_PATH<br>
# AMORE extras<br>
export DATE_RUN_TYPE=PHYSICS<br>
export DATE_RUN_NUMBER=1<br>
export AMORE_CDB_URI=local:///local/cdb<br>
export DIM_DNS_NODE=</kbd><kbd>localhos</kbd>t</p>

<p>If you didn't compile and install ROOT yourself, add</p>

<p><kbd># ROOT<br>
export ROOTSYS=/opt/root<br>
export PATH=$ROOTSYS/bin:$PATH<br>
export LD_LIBRARY_PATH=$ROOTSYS/lib:$LD_LIBRARY_PATH</kbd></p>

<p>Finally, add the commands</p>

<p><kbd>if [ -f /date/setup.sh ]; </kbd><kbd>then&nbsp;&nbsp;&nbsp;&nbsp; </kbd><br><kbd>&nbsp; export DATE_SITE=/dateSite </kbd><br><kbd>&nbsp; . /date/setup.sh<br>
&nbsp; /date/runControl/start_dim.sh<br>
fi</kbd></p>

<p>to the file /etc/rc.local. This way, DIM will be always started at boot time.</p>

<p>Before continuing, please close the terminal and open a new one.</p>

<h2>2.2 Database configuration</h2>

<ol><li>If mysql was just installed now, you have to set a root password. To do so
	<ol><li>Note down the password written in /root/.mysql_secret</li>
		<li><kbd>/sbin/service mysql start</kbd></li>
		<li><kbd>mysqladmin -u root -h localhost -p password</kbd></li>
		<li>Enter the password as in the file, then the new one + confirm</li>
	</ol></li>
	<li>To setup the MySQL database and accounts to be used by AMORE, execute amoreMysqlSetup and follow the instructions.</li>
	<li>Then, execute newAmoreSite to setup the necessary files in $AMORE_SITE.</li>
	<li>Finally, please execute the following command and put it in your .bashrc :<br><kbd>. amoreSetup $AMORE_SITE/AMORE.params</kbd></li>
</ol><h2>2.3 Troubleshooting</h2>

<p><em>Problem</em> : The MySQL server runs on your local machine and, after entering your local machine name in the MySQL server host name field, you get the following error :<br>
ERROR 1130 (HY000): Host 'yourhostname' is not allowed to connect to this MySQL server<br>
Connection failed.</p>

<p><em>Solution</em> : Enter 'localhost' in the MySql server host name field.</p>

<h1>3. Test run of the system</h1>

<p>The Developer's kit (also called amoreTST) is a simple yet fully operational AMORE module. We will use it to test our system (see below). You can then use it as a skeleton to start developing your own module. It shows many usages and features of the framework. You can also simply use it to play with the system.</p>

<p>If you plan to develop your own AMORE module(s), follow the instructions in the section <a href="https://alice-daq.web.cern.ch/print/112#compilation_amoreTST">Download and compilation of amoreTST</a>, for those who just want to run AMORE, go directly to the section <a href="https://alice-daq.web.cern.ch/print/112#install_yum">Installation of amoreTST via YUM</a>. In both cases, continue with the instructions in <a href="https://alice-daq.web.cern.ch/print/112#test_run">Test run</a> and in case of problems head to the <a href="https://alice-daq.web.cern.ch/print/112#Troubleshooting">Troubleshooting</a> section.</p>

<h3><a name="compilation_amoreTST" id="compilation_amoreTST">3.1 Download and compilation of amoreTST</a></h3>
<link><ol><li>Either download the tarball from the AMORE website or check it out from SVN:<br>
	svn co <a href="https://svn.cern.ch/reps/alicedaq/Software/amore_modules/branches/current_deploy/amoreTST" title="https://svn.cern.ch/reps/alicedaq/Software/amore_modules/branches/current_deploy/amoreTST">https://svn.cern.ch/reps/alicedaq/Software/amore_modules/branches/curren...</a></li>
	<li>Inside the top directory run make. This will create the shared libraries for this module.</li>
	<li>Then execute make install. It installs the libraries in $AMORE_SITE/lib</li>
	<li>If no build errors are encountered you should be able to see 3 shared libraries inside $AMORE_SITE/lib.</li>
</ol><h3><a name="install_yum" id="install_yum">3.2 Installation of amoreTST via YUM </a></h3>

<p>Type:&nbsp; <kbd>yum install amoreTST</kbd></p>

<h3><a name="test_run" id="test_run">3.3 Test run </a></h3>

<p>You must have followed the instructions of the two previous chapters for these instructions to work. We will now check whether your system has been correctly set up by starting the agent and the client user interface of the TST module (developer's kit).</p>

<ol><li>Agent creation: First, create an agent that will use the module amoreTST. Please execute newAmoreAgent and follow the instructions. Simply choose the default values proposed by the script.</li>
	<li>Data source preparation: To run, we need a data source. In production it will be a GDC or an LDC, but here we will use a raw data file. Retrieve a root file from Alien and use the <kbd>deroot</kbd> utility from AliRoot to transform it to a raw data file. If the file date from Run 1, use in addition /opt/date/monitoring/Linux/mpConvert on it.<br>
	If your lab is equiped with a complete DAQ setup, you can of course later use your GDCs or LDCs as online data source (please refer to the DATE manual to know the proper syntax). Please note that <kbd>deroot</kbd> is part of AliRoot and is built only if DATE is available when building aliroot.<br>
	You can also contact an AMORE developer to ask for a test file.</li>
	<li>Agent launching: To start the agent, issue the command:<br><kbd>amoreAgent -a TST01 -s <datasource> -r</datasource></kbd><br><datasource> is the path to the raw data file prepared at step 2. The datasource needs to provide data for a sufficiently long period. In case the file is too short, one can use the -r option to automatically rewind the file. Every 10 seconds (default monitor cycle length) the agent will publish updated objects to the pool, making them available to the clients.<br>
	There are many more command line options that can be specified. For a complete and up-to-date list, run amoreAgent without options.</datasource></li>
	<li>GUI startup: To start the GUI, in another terminal issue the command:<br><em>amore -d TST -m MyModule1</em><br>
	TST is the detector code and MyModule1 is the module name, e.g. the name of the UI class. A GUI window should open. Press the Start button. If the amoreAgent named amoreAgentTST01, started with the instructions of step 2, is running properly, you should be able to see some plots updated every 10 seconds.</li>
	<li>Optionally, you can use the generic gui. Install it (yum install dqmv) and run it (amoreGui).</li>
</ol><h3><a name="Troubleshooting" id="Troubleshooting">3.4 Troubleshooting</a></h3>

<ol><li>I get errors about "inserting agent info into the logbook". What should I do ?<br>
	Nothing, it is a feature that can work only at P2, i.e. in production. Just ignore it.</li>
	<li>I get the error "Server Connecting to DIM_DNS on localhost: Connection Refused", what can I do ?<br>
	The DIM DNS server is not running or the environment variable DIM_DNS_NODE is not pointing to the correct machine.<br>
	To start the server do "/date/runControl/start_dim.sh". To be noted that this command should be part of rc.local as mentioned above.<br>
	DIM_DNS_NODE should point to the machine and have access to the machine where the server is running.</li>
	<li>amoreAgent complains that "Data file not found or not accessible" or "data corrupted". What can I do ?<br>
	It might be that you mistyped the path to the file. It might as well be that you are trying to read a raw data file containing events with the CDH v2 (Run 1) with a DATE monitoring library &gt; 7.52 expecting CDH v3. If so, simply convert the raw data file using the utility mpConvert available with DATE.</li>
	<li>The client can't connect, it says that connection has timed out. What is the problem ?<br>
	When this happened in the past, it was due to the machine was not able to ping itself by its hostname because of a wrong /etc/hosts. Make sure you can ping yourself with you hostname and public ip and that others can as well.</li>
</ol><h1>4. Further reading</h1>

<p>If you wish to understand more about AMORE, read the <a href="https://alice-daq.web.cern.ch/products/amore-developer-manual-part-1-architecture-design-features">part 1 of the manual</a>.</p>

<p>If you want to develop your module right away, jump to <a href="https://alice-daq.web.cern.ch/node/767">part 2 of the manual</a> and to the <a href="https://alice-daq.web.cern.ch/products/amore-api">API description</a>.</p>

<p>Finally, if you want to configure further your test and development setup, go directly to <a href="https://alice-daq.web.cern.ch/products/amore-developer-manual-part-3-operating-testdevelopment-system">part 3 of the manual</a>.</p>

<p>&nbsp;</p>

<h1>Annex A: Installation of AMORE from source</h1>

<p>This is not the recommended way of installing AMORE. You still need to install the dependencies, probably with yum (see above). Also, the configuration part for AMORE's dependencies must be already done (see next section).</p>

<p>The source code is in SVN (see<a href="https://alice-daq.web.cern.ch/sites/alice-daq.web.cern.ch/files/svnTuto.pdf"> this quick guide </a>attached to this page), in :<br><kbd><a href="https://svn.cern.ch/reps/alicedaq/Software/amore">https://svn.cern.ch/reps/alicedaq/Software/amore</a><br><a href="https://svn.cern.ch/reps/alicedaq/Software/amore_modules">https://svn.cern.ch/reps/alicedaq/Software/amore_modules</a></kbd></p>

<p>To build and install AMORE from source code (we use the trunk here), do:</p>

<ol><li><kbd>svn co <a href="https://svn.cern.ch/reps/alicedaq/Software/amore/trunk" title="https://svn.cern.ch/reps/alicedaq/Software/amore/trunk">https://svn.cern.ch/reps/alicedaq/Software/amore/trunk</a> amore</kbd></li>
	<li><kbd>cd amore</kbd></li>
	<li><kbd>mkdir build</kbd></li>
	<li><kbd>cd build</kbd></li>
	<li><kbd>[install cmake with yum if you don't have it]</kbd></li>
	<li><kbd>cmake ..</kbd></li>
	<li><kbd>make -j8</kbd></li>
	<li><kbd>make install&nbsp;</kbd></li>
</ol><p>And then for the web tools :</p>

<ol><li><kbd>cd ../src/web</kbd></li>
	<li><kbd>mkdir dirty ; cd dirty ; cmake .. </kbd></li>
	<li><kbd>make install</kbd></li>
</ol><p>The steps above will install amore in /opt. In order to customize the installation directory or the compilation options, add the configure options in points 5 and 2 above, with:</p>

<p><kbd>cmake</kbd> configure_options</p>

<p><kbd>for example: cmake -DCMAKE_INSTALL_PREFIX=</kbd>destination_dir</p>

<p>Instructions to use ccmake can be found <a href="http://www.ogre3d.org/tikiwiki/Getting+Started+With+CMake#ccmake">here</a> (amongst other resources).</p>

<p><!--AMORE setup--></p>

<p><!--AMORE setup--></p>
</div></div></div><div class="field field-name-field-attached-files field-type-file field-label-above"><div class="field-label">Attached files:&nbsp;</div><div class="field-items"><div class="field-item even"><span class="file"><img class="file-icon" alt="PDF icon" title="application/pdf" src="./AMORE-setup_files/application-pdf.png"> <a href="https://alice-daq.web.cern.ch/sites/alice-daq.web.cern.ch/files/svnTuto_0.pdf" type="application/pdf; length=48704">svnTuto.pdf</a></span></div><div class="field-item odd"><span class="file"><img class="file-icon" alt="File" title="application/vnd.oasis.opendocument.text" src="./AMORE-setup_files/x-office-document.png"> <a href="https://alice-daq.web.cern.ch/sites/alice-daq.web.cern.ch/files/svnTuto_0.odt" type="application/vnd.oasis.opendocument.text; length=13173">svnTuto.odt</a></span></div></div></div>
  
  
  
</article><!-- /.node -->
</div>
    <div class="print-footer"></div>
    <hr class="print-hr">
          <div class="print-source_url">
        <strong>Source URL:</strong> https://alice-daq.web.cern.ch/products/amore-setup      </div>
        <div class="print-links"></div>
    <script type="text/javascript" src="./AMORE-setup_files/js_8mR9soLphCsRiE7iB6wmEcljj0Uklgc9W0Q3fsrgoWY.js"></script>
  

</body></html>